
#include <stdio.h>
#include <stdlib.h>
#define MAX_ITEM 5

int count = 0; //현재 상품 수
int choice, id;
int all_sell = 0; //전체 판매량
int all_store = 0; //전체 입고량

typedef struct product {
    int id_number; //상품 ID
    char name[50]; //상품명
    int price; //가격
    int store; //입고량
    int sell; //판매량
    int all_sellprice; //총 판매금액
} PRODUCT;

PRODUCT product[MAX_ITEM];

//ID로 상품 찾기
int find_id() {
    for (int j = 0; j < count; j++) {
        if (id == product[j].id_number) {
            return j;
        }
    }
    return -1; //못찾았을 때
}

//입고 함수
void store_fx() {
    printf("상품 ID: ");
    scanf("%d", &id);

    int index = find_id();
    if (index != -1) {
        printf("입고수량: ");
        scanf("%d", &product[index].store);
        printf("판매가격: ");
        scanf("%d", &product[index].price);
        return;
    }

    product[count].id_number = id;
    printf("상품명 : ");
    scanf("%s", product[count].name);
    printf("입고수량: ");
    scanf("%d", &product[count].store);
    printf("판매가격: ");
    scanf("%d", &product[count].price);
    count++;
}

//판매 함수
void sell_fx() {
    printf("상품 ID: ");
    scanf("%d", &id);

    int index = find_id();
    if (index == -1) {
        printf("해당 ID의 상품을 찾을 수 없습니다.\n");
        return;
    }

    int sell_plus;
    printf("판매 수량: ");
    scanf("%d", &sell_plus);

    product[index].sell += sell_plus;
    product[index].store -= sell_plus;
}

//개별 현황
void present_fx() {
    printf("원하는 상품 ID를 입력: ");
    scanf("%d", &id);

    int index = find_id();
    if (index == -1) {
        printf("해당 ID의 상품을 찾을 수 없습니다.\n");
        return;
    }

    product[index].all_sellprice = product[index].price * product[index].sell;
    printf("상품명: %s\n", product[index].name);
    printf("상품가격: %d원\n", product[index].price);
    printf("입고수량: %d\n", product[index].store);
    printf("판매수량: %d\n", product[index].sell);
    printf("총 판매금액: %d\n", product[index].all_sellprice);
}

//전체 현황
void all_present() {
    printf("전체 상품 현황\n");
    for (int i = 0; i < count; i++) {
        printf("ID %d: %s, 재고: %d, 판매량: %d, 판매금액: %d\n",
            product[i].id_number, product[i].name, product[i].store,
            product[i].sell, product[i].all_sellprice);
    }
}

//파일 저장
void save_product() {
    FILE* fp = fopen("product.bin", "wb");
    if (!fp) {
        printf("파일 저장 실패\n");
        return;
    }
    fwrite(&count, sizeof(int), 1, fp);
    fwrite(product, sizeof(PRODUCT), count, fp);
    fclose(fp);
    printf("상품 정보 저장됨 \n");
}


void load_product() {
    FILE* fp = fopen("product.bin", "rb");
    if (!fp) {
        printf("저장된 파일 X \n");
        return;
    }
    fread(&count, sizeof(int), 1, fp);
    fread(product, sizeof(PRODUCT), count, fp);
    fclose(fp);
    printf("상품 정보 로드 \n");
}

int main() {
    load_product();

    printf("[쇼핑몰 관리 프로그램]\n");

    while (1) {
        printf("원하는 메뉴를 선택하세요. (1. 입고, 2. 판매, 3. 개별현황, 4. 전체현황, 5. 저장, 6. 종료) >> ");
        scanf("%d", &choice);
        switch (choice) {
        case 1:
            store_fx();
            break;
        case 2:
            sell_fx();
            break;
        case 3:
            present_fx();
            break;
        case 4:
            all_present();
            break;
        case 5:
            save_product();
            break;
        case 6:
            save_product(); 
            return 0;
        default:
            printf("잘못된 입력입니다.\n");
        }
    }
}
